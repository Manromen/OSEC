CC=clang
CXX=clang++
CFLAGS=-W -Wall -Wextra -pedantic -x c -std=c11 -I ../source/
CXXFLAGS=-W -Wall -Wextra -pedantic -std=c++11 -stdlib=libc++ -I ../source/
LIBS=
OBJECTS=
EXECUTABLE_NAME=OSEC.exe
ARCH=

# architecture
#ARCH=-arch i386
#CFLAGS += -D IA32
#CXXFLAGS += -D IA32
#ARCH=-arch x86_64
#CFLAGS += -D AMD64
#CXXFLAGS += -D AMD64

# enable debug mode
CFLAGS += -DDEBUG -g -O0
CXXFLAGS += -DDEBUG -g -O0

all: linker

### Third Party

# RGP-Log
RGP_LOG_SOURCE_PATH= ../rgp-log/source/
CFLAGS += -I $(RGP_LOG_SOURCE_PATH)
CXXFLAGS += -I $(RGP_LOG_SOURCE_PATH)
OBJECTS += rgp-log.o
rgp-log.o: $(RGP_LOG_SOURCE_PATH)RGP-Log.cpp $(RGP_LOG_SOURCE_PATH)RGP-Log.h
	$(CXX) $(CXXFLAGS) $(ARCH) -c -o rgp-log.o $(RGP_LOG_SOURCE_PATH)RGP-Log.cpp $(LIBS)

# RGP-Chord
RGP_CHORD_SOURCE_PATH= ../rgp-chord/source/
CFLAGS += -I $(RGP_CHORD_SOURCE_PATH)
CXXFLAGS += -I $(RGP_CHORD_SOURCE_PATH)
OBJECTS += rgp-chord.o
OBJECTS += rgp-chord-data.o
OBJECTS += rgp-chord-node.o
rgp-chord.o: $(RGP_CHORD_SOURCE_PATH)Chord.cpp $(RGP_CHORD_SOURCE_PATH)Chord.h
	$(CXX) $(CXXFLAGS) $(ARCH) -c -o rgp-chord.o $(RGP_CHORD_SOURCE_PATH)Chord.cpp $(LIBS)
rgp-chord-data.o: $(RGP_CHORD_SOURCE_PATH)ChordData.cpp $(RGP_CHORD_SOURCE_PATH)ChordData.h
	$(CXX) $(CXXFLAGS) $(ARCH) -c -o rgp-chord-data.o $(RGP_CHORD_SOURCE_PATH)ChordData.cpp $(LIBS)
rgp-chord-node.o: $(RGP_CHORD_SOURCE_PATH)ChordNode.cpp $(RGP_CHORD_SOURCE_PATH)ChordNode.h
	$(CXX) $(CXXFLAGS) $(ARCH) -c -o rgp-chord-node.o $(RGP_CHORD_SOURCE_PATH)ChordNode.cpp $(LIBS)

### // Third Party

# classes
OBJECTS += app.o
OBJECTS += cli.o


# classes
app.o: ../source/App.cpp ../source/App.h
	$(CXX) $(CXXFLAGS) $(ARCH) -c -o app.o ../source/App.cpp $(LIBS)

cli.o: cli.cpp cli.h
	$(CXX) $(CXXFLAGS) $(ARCH) -c -o cli.o cli.cpp $(LIBS)

# linker
linker: $(OBJECTS)
	$(CXX) $(CXXFLAGS) $(ARCH) -o $(EXECUTABLE_NAME) $(OBJECTS) $(LIBS)

clean:
	rm -f *.o *~ $(EXECUTABLE_NAME)
